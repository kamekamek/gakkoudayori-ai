name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Flutter SDK のセットアップ
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
    
    # Flutter の依存関係キャッシュ
    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          frontend/.dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('frontend/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
    
    # 依存関係のインストール
    - name: Install dependencies
      working-directory: ./frontend
      run: flutter pub get
    
    # 静的解析
    - name: Analyze code
      working-directory: ./frontend
      run: flutter analyze
    
    # フォーマットチェック
    - name: Check formatting
      working-directory: ./frontend
      run: dart format --set-exit-if-changed .
    
    # テスト実行
    - name: Run tests
      working-directory: ./frontend
      run: flutter test --coverage
    
    # カバレッジレポートのアップロード
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: flutter
        name: flutter-coverage
        fail_ci_if_error: false

  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Python のセットアップ
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    # Python 依存関係のキャッシュ
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    # 依存関係のインストール
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black mypy pytest pytest-cov
    
    # 静的解析
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # フォーマットチェック
    - name: Check formatting with black
      working-directory: ./backend
      run: black --check .
    
    # 型チェック
    - name: Type check with mypy
      working-directory: ./backend
      run: mypy .
    
    # テスト実行
    - name: Test with pytest
      working-directory: ./backend
      run: pytest --cov=. --cov-report=xml
    
    # カバレッジレポートのアップロード
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false 