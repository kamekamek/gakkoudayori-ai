---
description: 
globs: 
alwaysApply: false
---
# コーディングガイドライン規約

詳細な規約は [CODING_GUIDELINES.md](mdc:CODING_GUIDELINES.md) を参照してください。

## 🎯 基本方針

### 品質目標
- **可読性**: チームメンバー全員が理解できるコード
- **保守性**: 変更・拡張が容易な設計
- **信頼性**: エラーハンドリングとテストカバレッジの徹底
- **セキュリティ**: 機密情報漏洩・脆弱性対策の実装

## 📱 Flutter/Dart 規約

### 命名規則（厳格遵守）
- **ファイル・ディレクトリ**: `snake_case.dart`
- **クラス・列挙型**: `PascalCase`
- **変数・関数・フィールド**: `camelCase`
- **定数**: `camelCase`

### アーキテクチャパターン（MVVM + Provider）
- Provider状態管理でChangeNotifierを継承
- Consumer ウィジェットで状態購読
- mounted チェック必須（非同期処理）
- StreamSubscription・Controllerの適切なdispose
- try-catch + ログ + ユーザー通知のエラーハンドリング

### 必須実装事項
- [ ] Provider クラスでnotifyListeners()適切な呼び出し
- [ ] 非同期処理後のmountedチェック
- [ ] dispose()でのリソース解放
- [ ] エラーハンドリングとユーザー通知

## 🐍 Python/FastAPI 規約

### 命名規則（厳格遵守）
- **ファイル・パッケージ**: `snake_case.py`
- **クラス**: `PascalCase`
- **変数・関数**: `snake_case`
- **定数**: `UPPER_SNAKE_CASE`

### アーキテクチャパターン（レイヤードアーキテクチャ）
- 完全な型ヒント（型注釈必須）
- Pydantic BaseModel使用
- APIRouter でのルーター分離
- Depends()での依存性注入
- 環境変数での設定管理
- JWT認証・権限チェック

### 必須実装事項
- [ ] すべての関数・変数に型ヒント
- [ ] Pydantic でのリクエスト・レスポンスモデル
- [ ] 環境変数での機密情報管理
- [ ] エンドポイント別ファイル分割
- [ ] 適切なHTTPステータスコード

## 🚫 絶対禁止事項

### 共通
- 機密情報のハードコード（APIキー・設定値）
- 重複コード・長い関数（DRY原則・単一責任原則違反）
- エラーハンドリング省略
- セキュリティ軽視（認証・認可・バリデーション省略）

### Flutter/Dart 固有
- mounted チェック省略（非同期処理後のsetState）
- dispose処理不備（StreamSubscription・Controller等）
- Consumer使用不適切（Provider状態の不適切な購読）

### Python/FastAPI 固有
- 型ヒント省略
- 環境変数未使用（設定値のハードコード）
- Pydantic未使用（型安全性）

## 📋 コードレビューチェックリスト

### 必須チェック項目
- [ ] 要件定義通りの機能実装
- [ ] 命名規則遵守（ファイル・クラス・変数）
- [ ] エラーケース・エッジケースの処理
- [ ] セキュリティ脆弱性の検証
- [ ] 適切なテスト実装・カバレッジ80%以上
- [ ] API キー・機密情報のハードコード禁止

### Flutter/Dart 固有
- [ ] Provider状態管理の適切な実装
- [ ] Consumer ウィジェットの適切な配置
- [ ] mounted チェック実装
- [ ] dispose処理の実装

### Python/FastAPI 固有
- [ ] 型ヒント完全実装
- [ ] Pydantic BaseModel使用
- [ ] 環境変数での設定管理
- [ ] JWT認証・権限チェック実装

## 🧪 テスト戦略

### カバレッジ目標
- **全体**: 80% 以上
- **重要機能**: 90% 以上
- **API**: 95% 以上

### TDD適用箇所
- **必須**: 音声認識・Geminiリライト・PDF生成・API・DB操作
- **推奨**: UIコンポーネント・ビジネスロジック
- **例外**: プロトタイプ・実験機能

参照: [CODING_GUIDELINES.md](mdc:CODING_GUIDELINES.md) の詳細なテスト実装例
